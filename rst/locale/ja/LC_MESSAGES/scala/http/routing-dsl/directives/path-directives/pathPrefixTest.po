# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-04 02:13+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language-Team: Japanese (https://www.transifex.com/akka-ja/teams/67802/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:4
msgid "pathPrefixTest"
msgstr ""

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:7
msgid "Signature"
msgstr ""

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:14
msgid "Description"
msgstr ""

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:15
msgid ""
"Checks whether the unmatched path of the ``RequestContext`` has a prefix "
"matched by the given ``PathMatcher``. Potentially extracts one or more "
"values (depending on the type of the argument) but doesn't consume its match"
" from the unmatched path."
msgstr ""

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:19
msgid ""
"This directive is very similar to the :ref:`-pathPrefix-` directive with the"
" one difference that the path prefix it matched (if it matched) is *not* "
"consumed. The unmatched path of the ``RequestContext`` is therefore left as "
"is even in the case that the directive successfully matched and the request "
"is passed on to its inner route."
msgstr ""

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:23
msgid ""
"For more info on how to create a ``PathMatcher`` see :ref:`pathmatcher-dsl`."
msgstr ""

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:25
msgid ""
"As opposed to its :ref:`-rawPathPrefixTest-` counterpart ``pathPrefixTest`` "
"automatically adds a leading slash to its ``PathMatcher`` argument, you "
"therefore don't have to start your matching expression with an explicit "
"slash."
msgstr ""

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:28
msgid ""
"Depending on the type of its ``PathMatcher`` argument the ``pathPrefixTest``"
" directive extracts zero or more values from the URI. If the match fails the"
" request is rejected with an :ref:`empty rejection set <empty rejections>`."
msgstr ""

#: ../../scala/http/routing-dsl/directives/path-directives/pathPrefixTest.rst:33
msgid "Example"
msgstr ""
