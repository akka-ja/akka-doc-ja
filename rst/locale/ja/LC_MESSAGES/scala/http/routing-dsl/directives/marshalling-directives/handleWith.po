# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-03 22:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:4
msgid "handleWith"
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:7
msgid "Signature"
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:13
msgid "Description"
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:14
msgid ""
"Completes the request using the given function. The input to the function"
" is produced with the in-scope entity unmarshaller and the result value "
"of the function is marshalled with the in-scope marshaller.  "
"``handleWith`` can be a convenient method combining ``entity`` with "
"``complete``."
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:19
msgid ""
"The ``handleWith`` directive is used when you want to handle a route with"
" a given function of type A â‡’ B.  ``handleWith`` will use both an in-"
"scope unmarshaller to convert a request into type A and an in-scope "
"marshaller to convert type B into a response. This is helpful when your "
"core business logic resides in some other class or you want your business"
" logic to be independent of the REST interface written with akka-http. "
"You can use ``handleWith`` to \"hand off\" processing to a given function"
" without requiring any akka-http-specific functionality."
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:26
msgid ""
"``handleWith`` is similar to ``produce``.  The main difference is "
"``handleWith`` automatically calls ``complete`` when the function passed "
"to ``handleWith`` returns. Using ``produce`` you must explicity call the "
"completion function passed from the ``produce`` function."
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:30
msgid ""
"See :ref:`marshalling <http-marshalling-scala>` and :ref:`unmarshalling "
"<http-unmarshalling-scala>` for guidance on marshalling entities with "
"akka-http."
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:34
msgid "Examples"
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:36
msgid ""
"The following example uses an ``updatePerson`` function with a ``Person``"
" case class as an input and output.  We plug this function into our route"
" using ``handleWith``."
msgstr ""

#: ../../scala/http/routing-dsl/directives/marshalling-directives/handleWith.rst:44
msgid ""
"The PersonJsonSupport object handles both marshalling and unmarshalling "
"of the Person case class."
msgstr ""

