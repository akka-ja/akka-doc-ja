# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-03 22:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../scala/http/common/xml-support.rst:4
msgid "XML Support"
msgstr ""

#: ../../scala/http/common/xml-support.rst:6
msgid ""
"Akka HTTP's :ref:`marshalling <http-marshalling-scala>` and "
":ref:`unmarshalling <http-unmarshalling-scala>` infrastructure makes it "
"rather easy to seamlessly support specific wire representations of your "
"data objects, like JSON, XML or even binary encodings."
msgstr ""

#: ../../scala/http/common/xml-support.rst:10
msgid ""
"For XML Akka HTTP currently provides support for `Scala XML`_ right out "
"of the box through it's ``akka-http-xml`` module."
msgstr ""

#: ../../scala/http/common/xml-support.rst:15
msgid "Scala XML Support"
msgstr ""

#: ../../scala/http/common/xml-support.rst:17
msgid ""
"The ScalaXmlSupport_ trait provides a ``FromEntityUnmarshaller[NodeSeq]``"
" and ``ToEntityMarshaller[NodeSeq]`` that you can use directly or build "
"upon."
msgstr ""

#: ../../scala/http/common/xml-support.rst:20
msgid ""
"This is how you enable support for (un)marshalling from and to JSON with "
"`Scala XML`_ ``NodeSeq``:"
msgstr ""

#: ../../scala/http/common/xml-support.rst:22
#, python-format
msgid ""
"Add a library dependency onto ``\"com.typesafe.akka\" %% \"akka-http-xml-"
"experimental\" % \"1.x\"``."
msgstr ""

#: ../../scala/http/common/xml-support.rst:24
msgid ""
"``import akka.http.scaladsl.marshallers.xml.ScalaXmlSupport._`` or mix in"
" the ``akka.http.scaladsl.marshallers.xml.ScalaXmlSupport`` trait."
msgstr ""

#: ../../scala/http/common/xml-support.rst:27
msgid ""
"Once you have done this (un)marshalling between XML and ``NodeSeq`` "
"instances should work nicely and transparently."
msgstr ""

