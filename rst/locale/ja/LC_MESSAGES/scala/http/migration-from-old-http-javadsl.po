# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-03 22:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../scala/http/migration-from-old-http-javadsl.rst:4
msgid "Migration Guide from \"old\" HTTP JavaDSL"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:6
msgid ""
"The so-called \"old\" JavaDSL for Akka HTTP was initially developed "
"during the project's experimental phase, and thanks to multiple user "
"comments and contributions we were able to come up with a more Java 8 "
"\"feel\", which at the same time is also closer to the existing ScalaDSL."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:10
msgid ""
"The previous DSL has been entirely removed and replaced with the the so-"
"called \"new\" one. Upgrading to the new DSL is **highly encouraged** "
"since the old one not only was rather hard to work with, it actually was "
"not possible to express many typical use-cases using it."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:14
msgid "The most major changes include:"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:18
msgid "HttpApp is gone"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:19
msgid ""
"``HttpApp`` (a helper class containing a ``main()`` implementation) is "
"gone, as we would like to encourage understanding how the various "
"elements of the API fit together."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:22
msgid ""
"Instead developers should start applications \"manually\", by converting "
"a ``Route`` to a ``Flow<HttpRequest, HttpResponse, ?>`` using the "
"``Route.flow`` method. For examples of full apps refer to :ref:`http-"
"testkit-java`."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:26
msgid "``RequestVal`` is gone"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:27
msgid ""
"The old API heavily relied on the concept of \"request values\" which "
"could be used to extract a value from a request context."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:29
msgid ""
"Based on community feedback and our own experience we found them too hard"
" to work with in more complex settings. The concept of a request value "
"has been completely removed, and replaced with proper \"directives\", "
"exacly like in the ScalaDSL."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:32
msgid "**Previously**::"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:44
msgid "**Now**::"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:50
msgid "All of ScalaDSL routing has corresponding JavaDSL"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:51
msgid ""
"Both ``Route``, ``RouteResult`` and other important core concepts such as"
" ``Rejections`` are now modeled 1:1 with Scala, making is much simpler to"
" understand one API based on the other one â€“ tremendously useful when "
"learning about some nice pattern from blogs which used Scala, yet need to"
" apply it in Java and the other way around."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:55
msgid ""
"It is now possible to implement marshallers using Java. Refer to :ref"
":`marshalling-java` for details."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:58
msgid "Some complete* overloads changed to completeOK*"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:59
msgid ""
"In JavaDSL when complete is called with only an entity, the ``OK`` "
"response code is *assumed*, to make this more explicit these methods "
"contain the word ``OK`` in them."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:62
msgid ""
"This has been made more consistent than previously, across all overloads "
"and Future-versions of these APIs."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:65
msgid "Migration help"
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:66
msgid ""
"As always, feel free to reach out via the `akka-user "
"<https://groups.google.com/forum/#!searchin/akka-user/>`_ mailing list or"
" gitter channels, to seek help or guidance when migrating from the old "
"APIs."
msgstr ""

#: ../../scala/http/migration-from-old-http-javadsl.rst:69
msgid ""
"For Lightbend subscription owners it is possible to reach out to the core"
" team for help in the migration by asking specific questions via the "
"`Lightbend customer portal <https://portal.lightbend.com/>`_."
msgstr ""

