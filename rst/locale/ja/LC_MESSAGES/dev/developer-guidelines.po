# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-04 02:13+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language-Team: Japanese (https://www.transifex.com/akka-ja/teams/67802/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../dev/developer-guidelines.rst:4
msgid "Developer Guidelines"
msgstr ""

#: ../../dev/developer-guidelines.rst:8
msgid "First read `The Akka Contributor Guidelines`_."
msgstr ""

#: ../../dev/developer-guidelines.rst:11
msgid "Code Style"
msgstr ""

#: ../../dev/developer-guidelines.rst:13
msgid ""
"The Akka code style follows the `Scala Style Guide <http://docs.scala-"
"lang.org/style/>`_ . The only exception is the style of block comments:"
msgstr ""

#: ../../dev/developer-guidelines.rst:26
msgid ""
"Akka is using ``Scalariform`` to format the source code as part of the "
"build. So just hack away and then run ``sbt compile`` and it will reformat "
"the code according to Akka standards."
msgstr ""

#: ../../dev/developer-guidelines.rst:29
msgid "Process"
msgstr ""

#: ../../dev/developer-guidelines.rst:31
msgid ""
"The full process is described in `The Akka Contributor Guidelines`_. In "
"summary:"
msgstr ""

#: ../../dev/developer-guidelines.rst:33
msgid ""
"Make sure you have signed the Akka CLA, if not, `sign it online "
"<http://www.lightbend.com/contribute/cla>`_."
msgstr ""

#: ../../dev/developer-guidelines.rst:34
msgid ""
"Pick a ticket, if there is no ticket for your work then create one first."
msgstr ""

#: ../../dev/developer-guidelines.rst:35
msgid ""
"Fork `akka/akka <https://github.com/akka/akka>`_. Start working in a feature"
" branch."
msgstr ""

#: ../../dev/developer-guidelines.rst:36
msgid ""
"When you are done, create a GitHub Pull-Request towards the targeted branch."
msgstr ""

#: ../../dev/developer-guidelines.rst:37
msgid ""
"When there's consensus on the review, someone from the Akka Core Team will "
"merge it."
msgstr ""

#: ../../dev/developer-guidelines.rst:40
msgid "Commit messages"
msgstr ""

#: ../../dev/developer-guidelines.rst:42
msgid ""
"Please follow the conventions described in `The Akka Contributor "
"Guidelines`_ when creating public commits and writing commit messages."
msgstr ""

#: ../../dev/developer-guidelines.rst:45
msgid "Testing"
msgstr ""

#: ../../dev/developer-guidelines.rst:47
msgid ""
"All code that is checked in **should** have tests. All testing is done with "
"``ScalaTest`` and ``ScalaCheck``."
msgstr ""

#: ../../dev/developer-guidelines.rst:49
msgid ""
"Name tests as **Test.scala** if they do not depend on any external stuff. "
"That keeps surefire happy."
msgstr ""

#: ../../dev/developer-guidelines.rst:50
msgid "Name tests as **Spec.scala** if they have external dependencies."
msgstr ""

#: ../../dev/developer-guidelines.rst:53
msgid "Actor TestKit"
msgstr ""

#: ../../dev/developer-guidelines.rst:55
msgid ""
"There is a useful test kit for testing actors: `akka.util.TestKit <@github"
"@/akka-testkit/src/main/scala/akka/testkit/TestKit.scala>`_. It enables "
"assertions concerning replies received and their timing, there is more "
"documentation in the :ref:`akka-testkit` module."
msgstr ""

#: ../../dev/developer-guidelines.rst:58
msgid "Multi-JVM Testing"
msgstr ""

#: ../../dev/developer-guidelines.rst:60
msgid ""
"Included in the example is an sbt trait for multi-JVM testing which will "
"fork JVMs for multi-node testing. There is support for running applications "
"(objects with main methods) and running ScalaTest tests."
msgstr ""

#: ../../dev/developer-guidelines.rst:65
msgid "NetworkFailureTest"
msgstr ""

#: ../../dev/developer-guidelines.rst:67
msgid "You can use the 'NetworkFailureTest' trait to test network failure."
msgstr ""
