# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-03 22:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../additional/faq.rst:2
msgid "Frequently Asked Questions"
msgstr ""

#: ../../additional/faq.rst:5
msgid "Akka Project"
msgstr ""

#: ../../additional/faq.rst:8
msgid "Where does the name Akka come from?"
msgstr ""

#: ../../additional/faq.rst:10
msgid ""
"It is the name of a beautiful Swedish `mountain "
"<https://lh4.googleusercontent.com/-z28mTALX90E/UCOsd249TdI/AAAAAAAAAB0"
"/zGyNNZla-zY/w442-h331/akka-beautiful-panorama.jpg>`_ up in the northern "
"part of Sweden called Laponia. The mountain is also sometimes called 'The"
" Queen of Laponia'."
msgstr ""

#: ../../additional/faq.rst:14
msgid ""
"Akka is also the name of a goddess in the Sámi (the native Swedish "
"population) mythology. She is the goddess that stands for all the beauty "
"and good in the world. The mountain can be seen as the symbol of this "
"goddess."
msgstr ""

#: ../../additional/faq.rst:18
msgid ""
"Also, the name AKKA is the a palindrome of letters A and K as in Actor "
"Kernel."
msgstr ""

#: ../../additional/faq.rst:20
msgid "Akka is also:"
msgstr ""

#: ../../additional/faq.rst:22
msgid ""
"the name of the goose that Nils traveled across Sweden on in `The "
"Wonderful Adventures of Nils "
"<http://en.wikipedia.org/wiki/The_Wonderful_Adventures_of_Nils>`_ by the "
"Swedish writer Selma Lagerlöf."
msgstr ""

#: ../../additional/faq.rst:23
msgid ""
"the Finnish word for 'nasty elderly woman' and the word for 'elder "
"sister' in the Indian languages Tamil, Telugu, Kannada and Marathi."
msgstr ""

#: ../../additional/faq.rst:24
msgid "a `font <http://www.dafont.com/akka.font>`_"
msgstr ""

#: ../../additional/faq.rst:25
msgid "a town in Morocco"
msgstr ""

#: ../../additional/faq.rst:26
msgid "a near-earth asteroid"
msgstr ""

#: ../../additional/faq.rst:29
msgid "Resources with Explicit Lifecycle"
msgstr ""

#: ../../additional/faq.rst:31
msgid ""
"Actors, ActorSystems, ActorMaterializers (for streams), all these types "
"of objects bind resources that must be released explicitly. The reason is"
" that Actors are meant to have a life of their own, existing "
"independently of whether messages are currently en route to them. "
"Therefore you should always make sure that for every creation of such an "
"object you have a matching ``stop``, ``terminate``, or ``shutdown`` call "
"implemented."
msgstr ""

#: ../../additional/faq.rst:37
msgid ""
"In particular you typically want to bind such values to immutable "
"references, i.e. ``final ActorSystem system`` in Java or ``val system: "
"ActorSystem`` in Scala."
msgstr ""

#: ../../additional/faq.rst:41
msgid "JVM application or Scala REPL “hanging”"
msgstr ""

#: ../../additional/faq.rst:43
msgid ""
"Due to an ActorSystem’s explicit lifecycle the JVM will not exit until it"
" is stopped. Therefore it is necessary to shutdown all ActorSystems "
"within a running application or Scala REPL session in order to allow "
"these processes to terminate."
msgstr ""

#: ../../additional/faq.rst:47
msgid ""
"Shutting down an ActorSystem will properly terminate all Actors and "
"ActorMaterializers that were created within it."
msgstr ""

#: ../../additional/faq.rst:51
msgid "Actors in General"
msgstr ""

#: ../../additional/faq.rst:54
msgid "sender()/getSender() disappears when I use Future in my Actor, why?"
msgstr ""

#: ../../additional/faq.rst:56
msgid ""
"When using future callbacks, inside actors you need to carefully avoid "
"closing over the containing actor’s reference, i.e. do not call methods "
"or access mutable state on the enclosing actor from within the callback. "
"This breaks the actor encapsulation and may introduce synchronization "
"bugs and race conditions because the callback will be scheduled "
"concurrently to the enclosing actor. Unfortunately there is not yet a way"
" to detect these illegal accesses at compile time."
msgstr ""

#: ../../additional/faq.rst:63
msgid "Read more about it in the docs for :ref:`jmm-shared-state`."
msgstr ""

#: ../../additional/faq.rst:66
msgid "Why OutOfMemoryError?"
msgstr ""

#: ../../additional/faq.rst:68
msgid ""
"It can be many reasons for OutOfMemoryError. For example, in a pure push "
"based system with message consumers that are potentially slower than "
"corresponding message producers you must add some kind of message flow "
"control. Otherwise messages will be queued in the consumers' mailboxes "
"and thereby filling up the heap memory."
msgstr ""

#: ../../additional/faq.rst:73
msgid "Some articles for inspiration:"
msgstr ""

#: ../../additional/faq.rst:75
msgid ""
"`Balancing Workload across Nodes with Akka 2 "
"<http://letitcrash.com/post/29044669086/balancing-workload-across-nodes-"
"with-akka-2>`_."
msgstr ""

#: ../../additional/faq.rst:76
msgid ""
"`Work Pulling Pattern to prevent mailbox overflow, throttle and "
"distribute work <http://www.michaelpollmeier.com/akka-work-pulling-"
"pattern>`_"
msgstr ""

#: ../../additional/faq.rst:79
msgid "Actors Scala API"
msgstr ""

#: ../../additional/faq.rst:82
msgid "How can I get compile time errors for missing messages in `receive`?"
msgstr ""

#: ../../additional/faq.rst:84
msgid ""
"One solution to help you get a compile time warning for not handling a "
"message that you should be handling is to define your actors input and "
"output messages implementing base traits, and then do a match that the "
"will be checked for exhaustiveness."
msgstr ""

#: ../../additional/faq.rst:89
msgid ""
"Here is an example where the compiler will warn you that the match in "
"receive isn't exhaustive:"
msgstr ""

#: ../../additional/faq.rst:95
msgid "Remoting"
msgstr ""

#: ../../additional/faq.rst:98
msgid "I want to send to a remote system but it does not do anything"
msgstr ""

#: ../../additional/faq.rst:100
msgid ""
"Make sure that you have remoting enabled on both ends: client and server."
" Both do need hostname and port configured, and you will need to know the"
" port of the server; the client can use an automatic port in most cases "
"(i.e. configure port zero). If both systems are running on the same "
"network host, their ports must be different"
msgstr ""

#: ../../additional/faq.rst:106
msgid ""
"If you still do not see anything, look at what the logging of remote "
"life-cycle events tells you (normally logged at INFO level) or switch on "
":ref:`logging-remote-java` to see all sent and received messages (logged "
"at DEBUG level)."
msgstr ""

#: ../../additional/faq.rst:112
msgid "Which options shall I enable when debugging remoting issues?"
msgstr ""

#: ../../additional/faq.rst:114
msgid ""
"Have a look at the :ref:`remote-configuration-java`, the typical "
"candidates are:"
msgstr ""

#: ../../additional/faq.rst:116
msgid "`akka.remote.log-sent-messages`"
msgstr ""

#: ../../additional/faq.rst:117
msgid "`akka.remote.log-received-messages`"
msgstr ""

#: ../../additional/faq.rst:118
msgid ""
"`akka.remote.log-remote-lifecycle-events` (this also includes "
"deserialization errors)"
msgstr ""

#: ../../additional/faq.rst:121
msgid "What is the name of a remote actor?"
msgstr ""

#: ../../additional/faq.rst:123
msgid ""
"When you want to send messages to an actor on a remote host, you need to "
"know its :ref:`full path <addressing>`, which is of the form::"
msgstr ""

#: ../../additional/faq.rst:128
msgid "Observe all the parts you need here:"
msgstr ""

#: ../../additional/faq.rst:131
msgid ""
"``protocol`` is the protocol to be used to communicate with the remote "
"system."
msgstr ""

#: ../../additional/faq.rst:131
msgid "Most of the cases this is `tcp`."
msgstr ""

#: ../../additional/faq.rst:133
msgid ""
"``system`` is the remote system’s name (must match exactly, case-"
"sensitive!)"
msgstr ""

#: ../../additional/faq.rst:135
msgid ""
"``host`` is the remote system’s IP address or DNS name, and it must match"
" that system’s configuration (i.e. `akka.remote.netty.tcp.hostname`)"
msgstr ""

#: ../../additional/faq.rst:138
msgid ""
"``1234`` is the port number on which the remote system is listening for "
"connections and receiving messages"
msgstr ""

#: ../../additional/faq.rst:141
msgid ""
"``/user/my/actor/hierarchy/path`` is the absolute path of the remote "
"actor in the remote system’s supervision hierarchy, including the "
"system’s guardian (i.e. ``/user``, there are others e.g. ``/system`` "
"which hosts loggers, ``/temp`` which keeps temporary actor refs used with"
" :meth:`ask`, ``/remote`` which enables remote deployment, etc.); this "
"matches how the actor prints its own ``self`` reference on the remote "
"host, e.g. in log output."
msgstr ""

#: ../../additional/faq.rst:149
msgid "Why are replies not received from a remote actor?"
msgstr ""

#: ../../additional/faq.rst:151
msgid ""
"The most common reason is that the local system’s name (i.e. the "
"``system@host:1234`` part in the answer above) is not reachable from the "
"remote system’s network location, e.g. because ``host`` was configured to"
" be ``0.0.0.0``, ``localhost`` or a NAT’ed IP address."
msgstr ""

#: ../../additional/faq.rst:156
msgid ""
"If you are running an ActorSystem under a NAT or inside a docker "
"container, make sure to set `akka.remote.netty.tcp.hostname` and "
"`akka.remote.netty.tcp.port` to the address it is reachable at from other"
" ActorSystems. If you need to bind your network interface to a different "
"address - use `akka.remote.netty.tcp.bind-hostname` and "
"`akka.remote.netty.tcp.bind-port` settings. Also make sure your network "
"is configured to translate from the address your ActorSystem is reachable"
" at to the address your ActorSystem network interface is bound to."
msgstr ""

#: ../../additional/faq.rst:165
msgid "How reliable is the message delivery?"
msgstr ""

#: ../../additional/faq.rst:167
msgid ""
"The general rule is **at-most-once delivery**, i.e. no guaranteed "
"delivery. Stronger reliability can be built on top, and Akka provides "
"tools to do so."
msgstr ""

#: ../../additional/faq.rst:170
msgid "Read more in :ref:`message-delivery-reliability`."
msgstr ""

#: ../../additional/faq.rst:173
msgid "Debugging"
msgstr ""

#: ../../additional/faq.rst:176
msgid "How do I turn on debug logging?"
msgstr ""

#: ../../additional/faq.rst:178
msgid ""
"To turn on debug logging in your actor system add the following to your "
"configuration::"
msgstr ""

#: ../../additional/faq.rst:182
msgid ""
"To enable different types of debug logging add the following to your "
"configuration:"
msgstr ""

#: ../../additional/faq.rst:184
msgid ""
"``akka.actor.debug.receive`` will log all messages sent to an actor if "
"that actors `receive` method is a ``LoggingReceive``"
msgstr ""

#: ../../additional/faq.rst:186
msgid ""
"``akka.actor.debug.autoreceive`` will log all *special* messages like "
"``Kill``, ``PoisonPill`` e.t.c. sent to all actors"
msgstr ""

#: ../../additional/faq.rst:188
msgid ""
"``akka.actor.debug.lifecycle`` will log all actor lifecycle events of all"
" actors"
msgstr ""

#: ../../additional/faq.rst:190
msgid ""
"Read more about it in the docs for :ref:`logging-java` and :ref:`actor"
".logging-scala`."
msgstr ""

