# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-03 22:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../java/lambda-index-actors.rst:4
msgid "Actors (Java with Lambda Support)"
msgstr ""

#: ../../java/lambda-index-actors.rst:6
msgid ""
"Starting with Akka 2.4.2 we have begun to introduce Java 8 types (most "
"prominently ``java.util.concurrent.CompletionStage`` and "
"``java.util.Optional``) where that was possible without breaking binary "
"or source compatibility. Where this was not possible (for example in the "
"return type of ``ActorSystem.terminate()``) please refer to the ``scala-"
"java8-compat`` library that allows easy conversion between the Scala and "
"Java counterparts. The artifact can be included in Maven builds using::"
msgstr ""

#: ../../java/lambda-index-actors.rst:20
msgid ""
"We will only be able to seamlessly integrate all functional interfaces "
"once we can rely on Scala 2.12 to provide full interoperabilityâ€”this will"
" mean that Scala users can directly implement Java Functional Interfaces "
"using lambda syntax as well as that Java users can directly implement "
"Scala functions using lambda syntax."
msgstr ""

