# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-04 02:13+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Takaichi Kubo <tk.qubo@gmail.com>, 2016\n"
"Language-Team: Japanese (https://www.transifex.com/akka-ja/teams/67802/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../java/cluster-metrics.rst:5
msgid "Cluster Metrics Extension"
msgstr ""

#: ../../java/cluster-metrics.rst:8
msgid "Introduction"
msgstr "イントロダクション"

#: ../../java/cluster-metrics.rst:10
msgid ""
"The member nodes of the cluster can collect system health metrics and "
"publish that to other cluster nodes and to the registered subscribers on the"
" system event bus with the help of Cluster Metrics Extension."
msgstr ""

#: ../../java/cluster-metrics.rst:13
msgid ""
"Cluster metrics information is primarily used for load-balancing routers, "
"and can also be used to implement advanced metrics-based node life cycles, "
"such as \"Node Let-it-crash\" when CPU steal time becomes excessive."
msgstr ""

#: ../../java/cluster-metrics.rst:17
msgid ""
"Cluster Metrics Extension is a separate Akka module delivered in ``akka-"
"cluster-metrics`` jar."
msgstr ""

#: ../../java/cluster-metrics.rst:19
msgid ""
"To enable usage of the extension you need to add the following dependency to"
" your project: ::"
msgstr ""

#: ../../java/cluster-metrics.rst:28
msgid ""
"and add the following configuration stanza to your ``application.conf`` ::"
msgstr ""

#: ../../java/cluster-metrics.rst:33
msgid ""
"Make sure to disable legacy metrics in akka-cluster: "
"``akka.cluster.metrics.enabled=off``, since it is still enabled in akka-"
"cluster by default (for compatibility with past releases)."
msgstr ""

#: ../../java/cluster-metrics.rst:36
msgid ""
"Cluster members with status :ref:`WeaklyUp <weakly_up_java>`, if that "
"feature is enabled, will participate in Cluster Metrics collection and "
"dissemination."
msgstr ""

#: ../../java/cluster-metrics.rst:40
msgid "Metrics Collector"
msgstr ""

#: ../../java/cluster-metrics.rst:42
msgid ""
"Metrics collection is delegated to an implementation of "
"``akka.cluster.metrics.MetricsCollector``."
msgstr ""

#: ../../java/cluster-metrics.rst:44
msgid ""
"Different collector implementations provide different subsets of metrics "
"published to the cluster. Certain message routing and let-it-crash functions"
" may not work when Sigar is not provisioned."
msgstr ""

#: ../../java/cluster-metrics.rst:47
msgid ""
"Cluster metrics extension comes with two built-in collector implementations:"
msgstr ""

#: ../../java/cluster-metrics.rst:49
msgid ""
"``akka.cluster.metrics.SigarMetricsCollector``, which requires Sigar "
"provisioning, and is more rich/precise"
msgstr ""

#: ../../java/cluster-metrics.rst:50
msgid ""
"``akka.cluster.metrics.JmxMetricsCollector``, which is used as fall back, "
"and is less rich/precise"
msgstr ""

#: ../../java/cluster-metrics.rst:52
msgid "You can also plug-in your own metrics collector implementation."
msgstr ""

#: ../../java/cluster-metrics.rst:54
msgid ""
"By default, metrics extension will use collector provider fall back and will"
" try to load them in this order:"
msgstr ""

#: ../../java/cluster-metrics.rst:56
msgid "configured user-provided collector"
msgstr ""

#: ../../java/cluster-metrics.rst:57
msgid "built-in ``akka.cluster.metrics.SigarMetricsCollector``"
msgstr ""

#: ../../java/cluster-metrics.rst:58
msgid "and finally ``akka.cluster.metrics.JmxMetricsCollector``"
msgstr ""

#: ../../java/cluster-metrics.rst:61
msgid "Metrics Events"
msgstr ""

#: ../../java/cluster-metrics.rst:63
msgid ""
"Metrics extension periodically publishes current snapshot of the cluster "
"metrics to the node system event bus."
msgstr ""

#: ../../java/cluster-metrics.rst:65
msgid ""
"The publication period is controlled by the ``akka.cluster.metrics.collector"
".sample-period`` setting."
msgstr ""

#: ../../java/cluster-metrics.rst:67
msgid ""
"The payload of the ``akka.cluster.metrics.ClusterMetricsChanged`` event will"
" contain latest metrics of the node as well as other cluster member nodes "
"metrics gossip which was received during the collector sample period."
msgstr ""

#: ../../java/cluster-metrics.rst:71
msgid ""
"You can subscribe your metrics listener actors to these events in order to "
"implement custom node lifecycle ::"
msgstr ""

#: ../../java/cluster-metrics.rst:77
msgid "Hyperic Sigar Provisioning"
msgstr ""

#: ../../java/cluster-metrics.rst:79
msgid ""
"Both user-provided and built-in metrics collectors can optionally use "
"`Hyperic Sigar <http://www.hyperic.com/products/sigar>`_ for a wider and "
"more accurate range of metrics compared to what can be retrieved from "
"ordinary JMX MBeans."
msgstr ""

#: ../../java/cluster-metrics.rst:82
msgid ""
"Sigar is using a native o/s library, and requires library provisioning, i.e."
" deployment, extraction and loading of the o/s native library into JVM at "
"runtime."
msgstr ""

#: ../../java/cluster-metrics.rst:85
msgid ""
"User can provision Sigar classes and native library in one of the following "
"ways:"
msgstr ""

#: ../../java/cluster-metrics.rst:87
msgid ""
"Use `Kamon sigar-loader <https://github.com/kamon-io/sigar-loader>`_ as a "
"project dependency for the user project. Metrics extension will extract and "
"load sigar library on demand with help of Kamon sigar provisioner."
msgstr ""

#: ../../java/cluster-metrics.rst:89
msgid ""
"Use `Kamon sigar-loader <https://github.com/kamon-io/sigar-loader>`_ as java"
" agent: ``java -javaagent:/path/to/sigar-loader.jar``. Kamon sigar loader "
"agent will extract and load sigar library during JVM start."
msgstr ""

#: ../../java/cluster-metrics.rst:91
msgid ""
"Place ``sigar.jar`` on the ``classpath`` and Sigar native library for the "
"o/s on the ``java.library.path``. User is required to manage both project "
"dependency and library deployment manually."
msgstr ""

#: ../../java/cluster-metrics.rst:96
msgid ""
"When using `Kamon sigar-loader <https://github.com/kamon-io/sigar-loader>`_ "
"and running multiple instances of the same application on the same host, you"
" have to make sure that sigar library is extracted to a unique per instance "
"directory. You can control the extract directory with the "
"``akka.cluster.metrics.native-library-extract-folder`` configuration "
"setting."
msgstr ""

#: ../../java/cluster-metrics.rst:101
msgid ""
"To enable usage of Sigar you can add the following dependency to the user "
"project ::"
msgstr ""

#: ../../java/cluster-metrics.rst:110
msgid ""
"You can download Kamon sigar-loader from `Maven Central "
"<http://search.maven.org/#search%7Cga%7C1%7Csigar-loader>`_"
msgstr ""

#: ../../java/cluster-metrics.rst:113
msgid "Adaptive Load Balancing"
msgstr ""

#: ../../java/cluster-metrics.rst:115
msgid ""
"The ``AdaptiveLoadBalancingPool`` / ``AdaptiveLoadBalancingGroup`` performs "
"load balancing of messages to cluster nodes based on the cluster metrics "
"data. It uses random selection of routees with probabilities derived from "
"the remaining capacity of the corresponding node. It can be configured to "
"use a specific MetricsSelector to produce the probabilities, a.k.a. weights:"
msgstr ""

#: ../../java/cluster-metrics.rst:119
msgid ""
"``heap`` / ``HeapMetricsSelector`` - Used and max JVM heap memory. Weights "
"based on remaining heap capacity; (max - used) / max"
msgstr ""

#: ../../java/cluster-metrics.rst:120
msgid ""
"``load`` / ``SystemLoadAverageMetricsSelector`` - System load average for "
"the past 1 minute, corresponding value can be found in ``top`` of Linux "
"systems. The system is possibly nearing a bottleneck if the system load "
"average is nearing number of cpus/cores. Weights based on remaining load "
"capacity; 1 - (load / processors)"
msgstr ""

#: ../../java/cluster-metrics.rst:121
msgid ""
"``cpu`` / ``CpuMetricsSelector`` - CPU utilization in percentage, sum of "
"User + Sys + Nice + Wait. Weights based on remaining cpu capacity; 1 - "
"utilization"
msgstr ""

#: ../../java/cluster-metrics.rst:122
msgid ""
"``mix`` / ``MixMetricsSelector`` - Combines heap, cpu and load. Weights "
"based on mean of remaining capacity of the combined selectors."
msgstr ""

#: ../../java/cluster-metrics.rst:123
msgid "Any custom implementation of ``akka.cluster.metrics.MetricsSelector``"
msgstr ""

#: ../../java/cluster-metrics.rst:125
msgid ""
"The collected metrics values are smoothed with `exponential weighted moving "
"average "
"<http://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average>`_. "
"In the :ref:`cluster_configuration_java` you can adjust how quickly past "
"data is decayed compared to new data."
msgstr ""

#: ../../java/cluster-metrics.rst:127
msgid ""
"Let's take a look at this router in action. What can be more demanding than "
"calculating factorials?"
msgstr ""

#: ../../java/cluster-metrics.rst:129
msgid "The backend worker that performs the factorial calculation:"
msgstr ""

#: ../../java/cluster-metrics.rst:133
msgid ""
"The frontend that receives user jobs and delegates to the backends via the "
"router:"
msgstr ""

#: ../../java/cluster-metrics.rst:138
msgid ""
"As you can see, the router is defined in the same way as other routers, and "
"in this case it is configured as follows:"
msgstr ""

#: ../../java/cluster-metrics.rst:142
msgid ""
"It is only ``router`` type and the ``metrics-selector`` parameter that is "
"specific to this router, other things work in the same way as other routers."
msgstr ""

#: ../../java/cluster-metrics.rst:145
msgid "The same type of router could also have been defined in code:"
msgstr ""

#: ../../java/cluster-metrics.rst:151
msgid ""
"The `Lightbend Activator <http://www.lightbend.com/platform/getstarted>`_ "
"tutorial named `Akka Cluster Samples with Java "
"<http://www.lightbend.com/activator/template/akka-sample-cluster-java>`_. "
"contains the full source code and instructions of how to run the **Adaptive "
"Load Balancing** sample."
msgstr ""

#: ../../java/cluster-metrics.rst:156
msgid "Subscribe to Metrics Events"
msgstr ""

#: ../../java/cluster-metrics.rst:158
msgid ""
"It is possible to subscribe to the metrics events directly to implement "
"other functionality."
msgstr ""

#: ../../java/cluster-metrics.rst:163
msgid "Custom Metrics Collector"
msgstr ""

#: ../../java/cluster-metrics.rst:165
msgid ""
"Metrics collection is delegated to the implementation of "
"``akka.cluster.metrics.MetricsCollector``"
msgstr ""

#: ../../java/cluster-metrics.rst:167
msgid ""
"You can plug-in your own metrics collector instead of built-in "
"``akka.cluster.metrics.SigarMetricsCollector`` or "
"``akka.cluster.metrics.JmxMetricsCollector``."
msgstr ""

#: ../../java/cluster-metrics.rst:170
msgid "Look at those two implementations for inspiration."
msgstr ""

#: ../../java/cluster-metrics.rst:172
msgid ""
"Custom metrics collector implementation class must be specified in the "
"``akka.cluster.metrics.collector.provider`` configuration property."
msgstr ""

#: ../../java/cluster-metrics.rst:176
msgid "Configuration"
msgstr ""

#: ../../java/cluster-metrics.rst:178
msgid ""
"The Cluster metrics extension can be configured with the following "
"properties:"
msgstr ""
