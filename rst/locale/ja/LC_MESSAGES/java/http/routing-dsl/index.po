# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-03 22:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../java/http/routing-dsl/index.rst:4
msgid "High-level Server-Side API"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:6
msgid ""
"In addition to the :ref:`http-low-level-server-side-api-java` Akka HTTP "
"provides a very flexible \"Routing DSL\" for elegantly defining RESTful "
"web services. It picks up where the low-level API leaves off and offers "
"much of the higher-level functionality of typical web servers or "
"frameworks, like deconstruction of URIs, content negotiation or static "
"content serving."
msgstr ""

#: ../../java/http/routing-dsl/index.rst:11
msgid ""
"To use the high-level API you need to add a dependency to the ``akka-"
"http-experimental`` module."
msgstr ""

#: ../../java/http/routing-dsl/index.rst:26
msgid "Handling HTTP Server failures in the High-Level API"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:27
msgid ""
"There are various situations when failure may occur while initialising or"
" running an Akka HTTP server. Akka by default will log all these "
"failures, however sometimes one may want to react to failures in addition"
" to them just being logged, for example by shutting down the actor "
"system, or notifying some external monitoring end-point explicitly."
msgstr ""

#: ../../java/http/routing-dsl/index.rst:33
msgid "Bind failures"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:34
msgid ""
"For example the server might be unable to bind to the given port. For "
"example when the port is already taken by another application, or if the "
"port is privileged (i.e. only usable by ``root``). In this case the "
"\"binding future\" will fail immediately, and we can react to if by "
"listening on the CompletionStage's completion:"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:43
msgid ""
"For a more low-level overview of the kinds of failures that can happen "
"and also more fine-grained control over them refer to the :ref:`handling-"
"http-server-failures-low-level-java` documentation."
msgstr ""

#: ../../java/http/routing-dsl/index.rst:47
msgid "Failures and exceptions inside the Routing DSL"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:49
msgid ""
"Exception handling within the Routing DSL is done by providing "
":class:`ExceptionHandler` s which are documented in-depth in the :ref"
":`exception-handling-java` section of the documtnation. You can use them "
"to transform exceptions into :class:`HttpResponse` s with apropriate "
"error codes and human-readable failure descriptions."
msgstr ""

#: ../../java/http/routing-dsl/index.rst:54
msgid "File uploads"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:56
msgid ""
"For high level directives to handle uploads see the :ref"
":`FileUploadDirectives-java`."
msgstr ""

#: ../../java/http/routing-dsl/index.rst:58
msgid ""
"Handling a simple file upload from for example a browser form with a "
"`file` input can be done by accepting a `Multipart.FormData` entity, note"
" that the body parts are `Source` rather than all available right away, "
"and so is the individual body part payload so you will need to consume "
"those streams both for the file and for the form fields."
msgstr ""

#: ../../java/http/routing-dsl/index.rst:63
msgid ""
"Here is a simple example which just dumps the uploaded file into a "
"temporary file on disk, collects some form fields and saves an entry to a"
" fictive database:"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:66
msgid "TODO missing example 1"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:68
msgid ""
"You can transform the uploaded files as they arrive rather than storing "
"then in a temporary file as in the previous example. In this example we "
"accept any number of ``.csv`` files, parse those into lines and split "
"each line before we send it to an actor for further processing:"
msgstr ""

#: ../../java/http/routing-dsl/index.rst:72
msgid "TODO missing example 2"
msgstr ""

