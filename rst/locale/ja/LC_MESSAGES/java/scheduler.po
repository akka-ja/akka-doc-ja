# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2016, Lightbend Inc
# This file is distributed under the same license as the Akka package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Akka @version@\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-04 02:13+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language-Team: Japanese (https://www.transifex.com/akka-ja/teams/67802/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../java/scheduler.rst:6
msgid "Scheduler"
msgstr ""

#: ../../java/scheduler.rst:8
msgid ""
"Sometimes the need for making things happen in the future arises, and where "
"do you go look then?  Look no further than ``ActorSystem``! There you find "
"the :meth:`scheduler` method that returns an instance of "
":class:`akka.actor.Scheduler`, this instance is unique per ActorSystem and "
"is used internally for scheduling things to happen at specific points in "
"time."
msgstr ""

#: ../../java/scheduler.rst:14
msgid ""
"You can schedule sending of messages to actors and execution of tasks "
"(functions or Runnable).  You will get a ``Cancellable`` back that you can "
"call :meth:`cancel` on to cancel the execution of the scheduled operation."
msgstr ""

#: ../../java/scheduler.rst:20
msgid ""
"The default implementation of ``Scheduler`` used by Akka is based on job "
"buckets which are emptied according to a fixed schedule.  It does not "
"execute tasks at the exact time, but on every tick, it will run everything "
"that is (over)due.  The accuracy of the default Scheduler can be modified by"
" the ``akka.scheduler.tick-duration`` configuration property."
msgstr ""

#: ../../java/scheduler.rst:27
msgid "Some examples"
msgstr ""

#: ../../java/scheduler.rst:29
msgid "Schedule to send the \"foo\"-message to the testActor after 50ms:"
msgstr ""

#: ../../java/scheduler.rst:37
msgid ""
"Schedule a Runnable, that sends the current time to the testActor, to be "
"executed after 50ms:"
msgstr ""

#: ../../java/scheduler.rst:44
msgid ""
"If you schedule Runnable instances you should be extra careful to not pass "
"or close over unstable references. In practice this means that you should "
"not call methods on the enclosing Actor from within the Runnable. If you "
"need to schedule an invocation it is better to use the ``schedule()`` "
"variant accepting a message and an ``ActorRef`` to schedule a message to "
"self (containing the necessary parameters) and then call the method when the"
" message is received."
msgstr ""

#: ../../java/scheduler.rst:51
msgid ""
"Schedule to send the \"Tick\"-message to the ``tickActor`` after 0ms "
"repeating every 50ms:"
msgstr ""

#: ../../java/scheduler.rst:60
msgid "From ``akka.actor.ActorSystem``"
msgstr ""

#: ../../java/scheduler.rst:67
msgid ""
"All scheduled task will be executed when the ``ActorSystem`` is terminated, "
"i.e. the task may execute before its timeout."
msgstr ""

#: ../../java/scheduler.rst:71
msgid "The Scheduler Interface for Implementors"
msgstr ""

#: ../../java/scheduler.rst:73
msgid ""
"The actual scheduler implementation is loaded reflectively upon "
":class:`ActorSystem` start-up, which means that it is possible to provide a "
"different one using the ``akka.scheduler.implementation`` configuration "
"property. The referenced class must implement the following interface:"
msgstr ""

#: ../../java/scheduler.rst:82
msgid "The Cancellable interface"
msgstr ""

#: ../../java/scheduler.rst:84
msgid ""
"Scheduling a task will result in a :class:`Cancellable` (or throw an "
":class:`IllegalStateException` if attempted after the schedulerâ€™s shutdown)."
" This allows you to cancel something that has been scheduled for execution."
msgstr ""

#: ../../java/scheduler.rst:90
msgid ""
"This does not abort the execution of the task, if it had already been "
"started.  Check the return value of ``cancel`` to detect whether the "
"scheduled task was canceled or will (eventually) have run."
msgstr ""
